var searchIndex = JSON.parse('{\
"dynalgo":{"doc":"dynalgo","t":[0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["graph","Graph","adjacency_list","borrow","borrow_mut","dyna_from","dyna_to","from","into","link_add","link_delete","new","node_add","node_add_fixed","node_delete","node_value","nodes_exchange","nodes_list","svg_animate","svg_automatic_animation","svg_automatic_layout","svg_layout","svg_layout_nodes","svg_link_selected","svg_node_color","svg_node_move","svg_node_position","svg_node_selected","svg_param_color_link_stroke","svg_param_color_node_fill","svg_param_color_node_stroke","svg_param_color_tag_created","svg_param_color_tag_deleted","svg_param_color_tag_selected","svg_param_color_text","svg_param_display_link_label","svg_param_display_link_value","svg_param_display_node_label","svg_param_display_node_value","svg_param_duration_add","svg_param_duration_color","svg_param_duration_delete","svg_param_duration_move","svg_param_duration_select","svg_param_radius_node","svg_param_stroke_width_link","svg_param_stroke_width_node","svg_render_animation_html","try_from","try_into","type_id"],"q":["dynalgo","dynalgo::graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Returns an adjacency list.","","","Imports a graph structure from a formatted String","Exports a graph structure to a formatted String","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Adds a link between two nodes. The link can be defined as …","Deletes a link.","Creates an empty graph structure","Adds a node to the graph structure.","Adds a node to the graph structure, with a fixed (x,y) …","Deletes a node from the graph structure. The associated …","Returns the optional value associated to the node.","Exchanges two nodes in the graph structure.","Returns the list of nodes names.","Creates SVG animations with SMIL language (affects only …","Activates or desactivates the <code>svg_automatic_animation</code> …","Activates or desactivates the <code>svg_automatic_layout</code> option …","Layouts all the nodes (affects only SVG rendering). …","Layouts the listed nodes (affects only SVG rendering). …","Changes the selected status of a link (affects only SVG …","Changes the fill color of the node SVG representation …","Changes the x,y coords of the node SVG representation …","Returns the current x,y coords of the node in the SVG …","Changes the selected status of a node (affects only SVG …","Changes the value of the color_link_stroke parameter …","Changes the value of the color_node_fill parameter …","Changes the value of the color_node_stroke parameter …","Changes the value of the color_tag_created parameter …","Changes the value of the color_tag_deleted parameter …","Changes the value of the color_tag_selected parameter …","Changes the value of the color_text parameter (affects …","Changes the value of the display_link_label parameter …","Changes the value of the display_link_value parameter …","Changes the value of the display_node_label parameter …","Changes the value of the display_node_value parameter …","Changes the value of the duration_add parameter (affects …","Changes the value of the duration_color parameter (affects …","Changes the value of the duration_delete parameter …","Changes the value of the duration_move parameter (affects …","Changes the value of the duration_select parameter …","Changes the value of the radius_node parameter (affects …","Changes the value of the stroke_width_link parameter …","Changes the value of the stroke_width_node parameter …","Exports the animations in SVG format into a HTML page. The …","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[1,[[3,[2,[3,[2]]]]]],[[]],[[]],[[1,4],[[5,[4]]]],[1,4],[[]],[[]],[[1,2,2,2,6,[8,[7]]],[[5,[4]]]],[[1,2],[[5,[4]]]],[[],1],[[1,2,[8,[7]]],[[5,[4]]]],[[1,2,9,9,[8,[7]]],[[5,[4]]]],[[1,2],[[5,[4]]]],[[1,2],[[5,[[8,[7]],4]]]],[[1,2,2],[[5,[4]]]],[1,[[10,[2]]]],[[1,11]],[[1,6]],[[1,6]],[1],[[1,[10,[2]]],[[5,[4]]]],[[1,2,6],[[5,[4]]]],[[1,2,7,7,7],[[5,[4]]]],[[1,2,12,12],[[5,[4]]]],[[1,2],[[5,[4]]]],[[1,2,6],[[5,[4]]]],[1],[1],[1],[1],[1],[1],[1],[[1,6]],[[1,6]],[[1,6]],[[1,6]],[[1,11]],[[1,11]],[[1,11]],[[1,11]],[[1,11]],[[1,11]],[[1,11]],[[1,11]],[[1,13],4],[[],5],[[],5],[[],14]],"p":[[3,"Graph"],[15,"char"],[3,"HashMap"],[3,"String"],[4,"Result"],[15,"bool"],[15,"u8"],[4,"Option"],[15,"i16"],[3,"Vec"],[15,"u32"],[15,"i32"],[15,"str"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
